# AIOT LLM Service - Production Dockerfile
# 🤖 生產環境專用，Django REST API 服務

FROM python:3.11-slim-bullseye as production

# 設定環境變數
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=llm.settings \
    PYTHONPATH=/app

# 安裝系統依賴
RUN apt-get update && apt-get install -y \
    curl \
    netcat \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# 創建非 root 用戶 (安全最佳實踐)
RUN groupadd -g 1001 pythonuser && useradd -r -u 1001 -g pythonuser pythonuser

# 設定工作目錄
WORKDIR /app

# 複製 requirements 並安裝 Python 依賴
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# 複製應用程式碼
COPY . .

# 設置正確的檔案權限
RUN chown -R pythonuser:pythonuser /app

# 切換到非 root 用戶
USER pythonuser

# 收集靜態檔案 (Django 生產部署需要)
RUN python manage.py collectstatic --noinput

# 執行資料庫遷移
RUN python manage.py migrate

# 生產端口
EXPOSE 8022

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8022/api/transformers/health/ || exit 1

# 生產環境啟動命令
CMD ["gunicorn", "--bind", "0.0.0.0:8022", "--workers", "4", "--timeout", "60", "llm.wsgi:application"]