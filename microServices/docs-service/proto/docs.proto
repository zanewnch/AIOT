syntax = "proto3";

package docs;

import "google/api/annotations.proto";

service DocsService {
  // 健康檢查端點
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {
    option (google.api.http) = {
      get: "/api/docs/health"
    };
  }
  
  // 服務資訊端點
  rpc GetServiceInfo(ServiceInfoRequest) returns (ServiceInfoResponse) {
    option (google.api.http) = {
      get: "/api/docs/info"
    };
  }
  
  // 文檔管理端點
  rpc GetAllDocs(GetAllDocsRequest) returns (GetAllDocsResponse) {
    option (google.api.http) = {
      get: "/api/docs"
    };
  }
  
  rpc GetDocByService(GetDocByServiceRequest) returns (GetDocByServiceResponse) {
    option (google.api.http) = {
      get: "/api/docs/{service_name}"
    };
  }
  
  rpc GenerateApiDocs(GenerateApiDocsRequest) returns (GenerateApiDocsResponse) {
    option (google.api.http) = {
      post: "/api/docs/generate"
      body: "*"
    };
  }
  
  rpc GetApiDocumentation(GetApiDocumentationRequest) returns (GetApiDocumentationResponse) {
    option (google.api.http) = {
      get: "/api/docs/api/{service_name}"
    };
  }
}

// 健康檢查相關訊息
message HealthCheckRequest {}

message HealthCheckResponse {
  string status = 1;
  string service = 2;
  string message = 3;
  string timestamp = 4;
  string version = 5;
}

message ServiceInfoRequest {}

message ServiceInfoResponse {
  string service = 1;
  string description = 2;
  string version = 3;
  string author = 4;
  repeated string features = 5;
}

// 文檔管理相關訊息
message GetAllDocsRequest {
  int32 page = 1;
  int32 limit = 2;
}

message GetAllDocsResponse {
  repeated DocInfo docs = 1;
  int32 total = 2;
  bool success = 3;
  string message = 4;
}

message GetDocByServiceRequest {
  string service_name = 1;
}

message GetDocByServiceResponse {
  DocInfo doc = 1;
  bool success = 2;
  string message = 3;
}

message GenerateApiDocsRequest {
  string service_name = 1;
  string doc_type = 2; // swagger, openapi, etc.
  bool force_regenerate = 3;
}

message GenerateApiDocsResponse {
  string documentation_url = 1;
  string generation_status = 2;
  bool success = 3;
  string message = 4;
}

message GetApiDocumentationRequest {
  string service_name = 1;
  string format = 2; // json, yaml, html
}

message GetApiDocumentationResponse {
  string content = 1;
  string content_type = 2;
  bool success = 3;
  string message = 4;
}

message DocInfo {
  int32 id = 1;
  string service_name = 2;
  string title = 3;
  string description = 4;
  string version = 5;
  string doc_type = 6;
  string file_path = 7;
  string url = 8;
  string created_at = 9;
  string updated_at = 10;
}