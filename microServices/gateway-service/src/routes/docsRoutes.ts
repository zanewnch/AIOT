/**
 * @fileoverview Gateway ÊñáÊ™îË∑ØÁî±
 * @description Áµ±‰∏ÄÁÆ°ÁêÜÊâÄÊúâÂæÆÊúçÂãôÁöÑÊñáÊ™îÂ±ïÁ§∫Âíå‰ª£ÁêÜ
 * @author AIOT Development Team
 * @version 1.0.0
 */

import { Router } from 'express';
import { loggerConfig } from '../configs/loggerConfig.js';
import { ResResult } from '../utils/ResResult.js';

/**
 * ÂâµÂª∫ÊñáÊ™îË∑ØÁî±
 * @returns Express Router
 */
export function createDocsRoutes(): Router {
    const router = Router();

    /**
     * Áµ±‰∏ÄÊñáÊ™îÈ¶ñÈ†Å - Á∞°ÂñÆÂ∞éËà™È†ÅÈù¢
     */
    router.get('/', (_req, res) => {
        loggerConfig.info('üìñ Serving documentation homepage');
        res.render('docs-home');
    });

    /**
     * ÊñáÊ™îÂÅ•Â∫∑Ê™¢Êü•
     */
    router.get('/health', (_req, res) => {
        const healthInfo = {
            status: 'healthy',
            service: 'docs-proxy',
            description: 'Documentation proxy service is running',
            availableServices: ['rbac', 'drone', 'general', 'auth'],
            timestamp: new Date().toISOString()
        };

        ResResult.success(res, healthInfo, 'Documentation proxy is healthy');
    });


    loggerConfig.info('‚úÖ Documentation routes initialized');
    return router;
}

// È†êË®≠ÂåØÂá∫
export default createDocsRoutes();