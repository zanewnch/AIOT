syntax = "proto3";

package general;

import "google/api/annotations.proto";

// General gRPC 服務定義
service GeneralService {
  // 使用者偏好設定管理
  rpc GetUserPreferences(GetUserPreferencesRequest) returns (GetUserPreferencesResponse) {
    option (google.api.http) = {
      get: "/api/general/user-preferences"
    };
  }
  rpc GetUserPreferenceById(GetUserPreferenceByIdRequest) returns (GetUserPreferenceByIdResponse) {
    option (google.api.http) = {
      get: "/api/general/user-preferences/{preference_id}"
    };
  }
  rpc CreateUserPreference(CreateUserPreferenceRequest) returns (CreateUserPreferenceResponse) {
    option (google.api.http) = {
      post: "/api/general/user-preferences"
      body: "*"
    };
  }
  rpc UpdateUserPreference(UpdateUserPreferenceRequest) returns (UpdateUserPreferenceResponse) {
    option (google.api.http) = {
      put: "/api/general/user-preferences/{preference_id}"
      body: "*"
    };
  }
  rpc DeleteUserPreference(DeleteUserPreferenceRequest) returns (DeleteUserPreferenceResponse) {
    option (google.api.http) = {
      delete: "/api/general/user-preferences/{preference_id}"
    };
  }

  // 系統設定管理
  rpc GetSystemSettings(GetSystemSettingsRequest) returns (GetSystemSettingsResponse) {
    option (google.api.http) = {
      get: "/api/general/system-settings"
    };
  }
  rpc GetSystemSettingByKey(GetSystemSettingByKeyRequest) returns (GetSystemSettingByKeyResponse) {
    option (google.api.http) = {
      get: "/api/general/system-settings/{setting_key}"
    };
  }
  rpc UpdateSystemSetting(UpdateSystemSettingRequest) returns (UpdateSystemSettingResponse) {
    option (google.api.http) = {
      put: "/api/general/system-settings/{setting_key}"
      body: "*"
    };
  }

  // 主題設定
  rpc GetThemeSettings(GetThemeSettingsRequest) returns (GetThemeSettingsResponse) {
    option (google.api.http) = {
      get: "/api/general/theme-settings"
    };
  }
  rpc UpdateThemeSettings(UpdateThemeSettingsRequest) returns (UpdateThemeSettingsResponse) {
    option (google.api.http) = {
      put: "/api/general/theme-settings"
      body: "*"
    };
  }

  // 語言設定
  rpc GetLanguageSettings(GetLanguageSettingsRequest) returns (GetLanguageSettingsResponse) {
    option (google.api.http) = {
      get: "/api/general/language-settings"
    };
  }
  rpc UpdateLanguageSettings(UpdateLanguageSettingsRequest) returns (UpdateLanguageSettingsResponse) {
    option (google.api.http) = {
      put: "/api/general/language-settings"
      body: "*"
    };
  }
}

// 共用訊息類型
message UserPreference {
  int32 id = 1;
  int32 user_id = 2;
  string preference_key = 3;
  string preference_value = 4;
  string category = 5;
  string description = 6;
  string created_at = 7;
  string updated_at = 8;
}

message SystemSetting {
  int32 id = 1;
  string setting_key = 2;
  string setting_value = 3;
  string category = 4;
  string description = 5;
  bool is_public = 6;
  string created_at = 7;
  string updated_at = 8;
}

message ThemeSetting {
  int32 user_id = 1;
  string theme_name = 2;
  string primary_color = 3;
  string secondary_color = 4;
  string background_color = 5;
  string text_color = 6;
  bool dark_mode = 7;
  string font_family = 8;
  int32 font_size = 9;
}

message LanguageSetting {
  int32 user_id = 1;
  string language_code = 2;
  string language_name = 3;
  string region = 4;
  string date_format = 5;
  string time_format = 6;
  string currency = 7;
}

// 使用者偏好設定相關請求/回應
message GetUserPreferencesRequest {
  int32 user_id = 1;
  string category = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetUserPreferencesResponse {
  repeated UserPreference preferences = 1;
  int32 total = 2;
  bool success = 3;
  string message = 4;
}

message GetUserPreferenceByIdRequest {
  int32 preference_id = 1;
}

message GetUserPreferenceByIdResponse {
  UserPreference preference = 1;
  bool success = 2;
  string message = 3;
}

message CreateUserPreferenceRequest {
  int32 user_id = 1;
  string preference_key = 2;
  string preference_value = 3;
  string category = 4;
  string description = 5;
}

message CreateUserPreferenceResponse {
  UserPreference preference = 1;
  bool success = 2;
  string message = 3;
}

message UpdateUserPreferenceRequest {
  int32 preference_id = 1;
  string preference_value = 2;
  string category = 3;
  string description = 4;
}

message UpdateUserPreferenceResponse {
  UserPreference preference = 1;
  bool success = 2;
  string message = 3;
}

message DeleteUserPreferenceRequest {
  int32 preference_id = 1;
}

message DeleteUserPreferenceResponse {
  bool success = 1;
  string message = 2;
}

// 系統設定相關請求/回應
message GetSystemSettingsRequest {
  string category = 1;
  bool public_only = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetSystemSettingsResponse {
  repeated SystemSetting settings = 1;
  int32 total = 2;
  bool success = 3;
  string message = 4;
}

message GetSystemSettingByKeyRequest {
  string setting_key = 1;
}

message GetSystemSettingByKeyResponse {
  SystemSetting setting = 1;
  bool success = 2;
  string message = 3;
}

message UpdateSystemSettingRequest {
  string setting_key = 1;
  string setting_value = 2;
  string description = 3;
  bool is_public = 4;
}

message UpdateSystemSettingResponse {
  SystemSetting setting = 1;
  bool success = 2;
  string message = 3;
}

// 主題設定相關請求/回應
message GetThemeSettingsRequest {
  int32 user_id = 1;
}

message GetThemeSettingsResponse {
  ThemeSetting theme = 1;
  bool success = 2;
  string message = 3;
}

message UpdateThemeSettingsRequest {
  int32 user_id = 1;
  string theme_name = 2;
  string primary_color = 3;
  string secondary_color = 4;
  string background_color = 5;
  string text_color = 6;
  bool dark_mode = 7;
  string font_family = 8;
  int32 font_size = 9;
}

message UpdateThemeSettingsResponse {
  ThemeSetting theme = 1;
  bool success = 2;
  string message = 3;
}

// 語言設定相關請求/回應
message GetLanguageSettingsRequest {
  int32 user_id = 1;
}

message GetLanguageSettingsResponse {
  LanguageSetting language = 1;
  bool success = 2;
  string message = 3;
}

message UpdateLanguageSettingsRequest {
  int32 user_id = 1;
  string language_code = 2;
  string language_name = 3;
  string region = 4;
  string date_format = 5;
  string time_format = 6;
  string currency = 7;
}

message UpdateLanguageSettingsResponse {
  LanguageSetting language = 1;
  bool success = 2;
  string message = 3;
}