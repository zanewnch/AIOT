name: Microservices Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'microServices/**'
      - '.github/workflows/microservices-test.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'microServices/**'
  workflow_dispatch:

env:
  NODE_ENV: test
  CI: true

jobs:
  microservice-tests:
    name: Test ${{ matrix.service }}
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    
    strategy:
      matrix:
        service: [auth-service, rbac-service, drone-service, general-service, gateway-service, drone-websocket-service, scheduler-service, archive-consumer-service]
      fail-fast: false  # 不因單一失敗停止所有測試
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: microServices/${{ matrix.service }}/package-lock.json
      
      - name: Load environment variables
        run: |
          if [ -f .env.act ]; then
            cat .env.act >> $GITHUB_ENV
          fi
          if [ -f .env.microservices ]; then
            cat .env.microservices >> $GITHUB_ENV
          fi
      
      - name: Install dependencies
        working-directory: microServices/${{ matrix.service }}
        run: |
          if [ -f package.json ]; then
            npm ci --prefer-offline --no-audit
          else
            echo "No package.json found in ${{ matrix.service }}"
            exit 1
          fi
      
      - name: TypeScript compilation check
        working-directory: microServices/${{ matrix.service }}
        run: |
          echo "🔍 檢查 ${{ matrix.service }} TypeScript 編譯..."
          if npx tsc --noEmit --skipLibCheck; then
            echo "✅ ${{ matrix.service }} TypeScript 編譯成功"
          else
            echo "❌ ${{ matrix.service }} TypeScript 編譯失敗"
            exit 1
          fi
      
      - name: Build service
        working-directory: microServices/${{ matrix.service }}
        run: |
          echo "🏗️ 建置 ${{ matrix.service }}..."
          if npm run build; then
            echo "✅ ${{ matrix.service }} 建置成功"
          else
            echo "❌ ${{ matrix.service }} 建置失敗"
            exit 1
          fi
      
      - name: Run unit tests
        working-directory: microServices/${{ matrix.service }}
        run: |
          echo "🧪 執行 ${{ matrix.service }} 單元測試..."
          if npm test -- --passWithNoTests --testTimeout=30000; then
            echo "✅ ${{ matrix.service }} 測試通過"
          else
            echo "❌ ${{ matrix.service }} 測試失敗"
            exit 1
          fi
      
      - name: Collect test results
        if: always()
        run: |
          mkdir -p ci-reports/microservices
          echo "{
            \"service\": \"${{ matrix.service }}\",
            \"status\": \"${{ job.status }}\",
            \"timestamp\": \"$(date -Iseconds)\",
            \"steps\": {
              \"typescript\": \"completed\",
              \"build\": \"completed\",
              \"test\": \"completed\"
            }
          }" > ci-reports/microservices/${{ matrix.service }}-result.json
      
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: microservice-${{ matrix.service }}-results
          path: |
            ci-reports/microservices/${{ matrix.service }}-result.json
            microServices/${{ matrix.service }}/coverage/
          retention-days: 7