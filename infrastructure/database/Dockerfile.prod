# AIOT MySQL - Production Dockerfile
# ⚙️ 生產環境專用，優化性能和安全性

FROM mysql:8.0 as production

# 安裝最小必要依賴
USER root
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# 生產環境 MySQL 配置
RUN echo '[mysqld]' > /etc/mysql/conf.d/prod.cnf \
    && echo 'innodb_buffer_pool_size = 1G' >> /etc/mysql/conf.d/prod.cnf \
    && echo 'innodb_log_file_size = 256M' >> /etc/mysql/conf.d/prod.cnf \
    && echo 'innodb_flush_log_at_trx_commit = 2' >> /etc/mysql/conf.d/prod.cnf \
    && echo 'max_connections = 500' >> /etc/mysql/conf.d/prod.cnf \
    && echo 'query_cache_type = 1' >> /etc/mysql/conf.d/prod.cnf \
    && echo 'query_cache_size = 128M' >> /etc/mysql/conf.d/prod.cnf \
    && echo 'slow_query_log = 1' >> /etc/mysql/conf.d/prod.cnf \
    && echo 'long_query_time = 5' >> /etc/mysql/conf.d/prod.cnf

# 創建非 root 用戶 (安全最佳實踐)
RUN groupadd -g 1001 mysqluser && useradd -r -u 1001 -g mysqluser mysqluser

# 生產端口
EXPOSE 3306

# 健康檢查 - 生產環境簡化檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=5 \
  CMD mysqladmin ping -h localhost -u root -p$$MYSQL_ROOT_PASSWORD || exit 1

# 生產環境啟動命令
ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]