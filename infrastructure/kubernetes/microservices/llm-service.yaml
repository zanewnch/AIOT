# LLM 微服務 Kubernetes 配置 (Django)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-service-deployment
  namespace: aiot
  labels:
    app: llm-service
    app.kubernetes.io/name: llm-service
    app.kubernetes.io/component: microservice
    app.kubernetes.io/part-of: aiot-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llm-service
  template:
    metadata:
      labels:
        app: llm-service
    spec:
      containers:
      - name: llm-service
        image: python:3.11-bullseye  # 使用Python基礎鏡像
        command: ['sh', '-c', 'mkdir -p llm && echo "print(\"LLM Service Django starting in development mode\")" > llm/__init__.py && cp django_settings.py llm/settings.py && pip install -r requirements.txt && python manage.py runserver 0.0.0.0:8020']
        ports:
        - containerPort: 8020
          name: http
        env:
        - name: SERVICE_NAME
          value: "llm-service"
        - name: DJANGO_PORT
          value: "8020"
        - name: DJANGO_SETTINGS_MODULE
          value: "llm.settings"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: DJANGO_DEBUG
          value: "True"
        # 從公共配置引入環境變數
        envFrom:
        - configMapRef:
            name: aiot-common-config
        - configMapRef:
            name: dev-environment-config
        - secretRef:
            name: aiot-database-secrets
        - secretRef:
            name: aiot-app-secrets
        # 開發模式：ConfigMap + emptyDir 實現 Django hot-reload
        volumeMounts:
        - name: app-workspace
          mountPath: /app
        - name: source-files
          mountPath: /app/requirements.txt
          subPath: requirements.txt
        - name: source-files
          mountPath: /app/manage.py
          subPath: manage.py
        - name: source-files
          mountPath: /app/django_settings.py
          subPath: settings.py
        livenessProbe:
          httpGet:
            path: /health/
            port: 8020
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8020
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: app-workspace
        emptyDir: {}
      - name: source-files
        configMap:
          name: django-service-template
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: llm-service
  namespace: aiot
  labels:
    app: llm-service
    app.kubernetes.io/name: llm-service
    app.kubernetes.io/component: microservice
spec:
  selector:
    app: llm-service
  ports:
  - port: 8020
    targetPort: 8020
    protocol: TCP
    name: http
  type: ClusterIP