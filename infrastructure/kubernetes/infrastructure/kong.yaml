# Kong API Gateway Kubernetes 配置
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiot-prod-kong-deployment
  namespace: aiot-prod
  labels:
    app: aiot-prod-kong
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: aiot-microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aiot-prod-kong
  template:
    metadata:
      labels:
        app: aiot-prod-kong
    spec:
      containers:
      - name: aiot-prod-kong
        image: kong:3.4
        ports:
        - containerPort: 8000
          name: proxy
        - containerPort: 8443
          name: proxy-ssl
        - containerPort: 8001
          name: admin
        - containerPort: 8444
          name: admin-ssl
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: "/kong/kong.yaml"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
        - name: KONG_PLUGINS
          value: "bundled"
        # 性能優化配置
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_NGINX_WORKER_CONNECTIONS
          value: "4096"
        - name: KONG_MEM_CACHE_SIZE
          value: "64m"
        - name: KONG_UPSTREAM_KEEPALIVE_POOL_SIZE
          value: "1024"
        - name: KONG_UPSTREAM_KEEPALIVE_MAX_REQUESTS
          value: "10000"
        - name: KONG_UPSTREAM_KEEPALIVE_IDLE_TIMEOUT
          value: "30"
        - name: KONG_DB_CACHE_TTL
          value: "3600"
        - name: KONG_NGINX_HTTP_KEEPALIVE_REQUESTS
          value: "10000"
        - name: KONG_NGINX_HTTP_CLIENT_BODY_BUFFER_SIZE
          value: "16k"
        - name: KONG_NGINX_HTTP_CLIENT_MAX_BODY_SIZE
          value: "1m"
        # 移除自定義 DNS 解析器，使用 Kubernetes 默認
        volumeMounts:
        - name: kong-config
          mountPath: /kong
          readOnly: true
        livenessProbe:
          exec:
            command:
            - kong
            - health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
      volumes:
      - name: kong-config
        configMap:
          name: aiot-prod-kong-config
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: aiot-prod-kong-service
  namespace: aiot-prod
  labels:
    app: aiot-prod-kong
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: api-gateway
spec:
  selector:
    app: aiot-prod-kong
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: proxy
  - port: 8443
    targetPort: 8443
    protocol: TCP
    name: proxy-ssl
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: admin
  - port: 8444
    targetPort: 8444
    protocol: TCP
    name: admin-ssl
  type: ClusterIP

---
# Kong Ingress Controller - 生產環境透過 Ingress 對外暴露
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aiot-prod-kong-ingress
  namespace: aiot-prod
  labels:
    app: aiot-prod-kong
    app.kubernetes.io/name: aiot-prod-kong
    app.kubernetes.io/component: api-gateway-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.aiot-prod.local
    secretName: aiot-prod-tls-secret
  rules:
  - host: api.aiot-prod.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aiot-prod-kong-service
            port:
              number: 8000